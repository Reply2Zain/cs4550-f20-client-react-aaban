{"ast":null,"code":"var _jsxFileName = \"/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/ListWidget.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowDown, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst handleKeyPress = (event, {\n  widget,\n  updateParagraphPreview\n}) => {\n  //console.log(\"debugging\",`test: ${event.target.value}`)\n  let lines = event.target.value.split(\"\\n\"); //console.log(\"debug\", lines)\n\n  let text = \"\";\n\n  for (var i = 0; i < lines.length; i++) {\n    if (event.key === \"Backspace\") {\n      text += `${lines[i]} `;\n    } else if (i === lines.length - 1) {\n      text += `${lines[i]}`;\n    } else {\n      text += `${lines[i]}&list00`;\n    }\n  } //console.log(text)\n\n\n  updateParagraphPreview(widget, text); // if(event.key === 'Enter'){\n  //   //alert(\"enter pressed\")\n  //   updateParagraphPreview(widget, `${event.target.value} \\n`)\n  // } else {\n  //   updateParagraphPreview(widget, event.target.value)\n  // }\n};\n\nconst createList = (widget, type) => {\n  if (widget.text !== null && widget.text !== undefined) {\n    //console.log(\"widgetText\", widget.text)\n    let lines = widget.text.split(\"&list00\"); //var num = lines.length\n    //console.log(num)\n\n    if (type === \"o\") {\n      return /*#__PURE__*/React.createElement(\"ol\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }, lines.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }\n      }, item)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }, lines.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }\n      }, item)));\n    }\n  }\n};\n\nconst getText = widget => {\n  if (widget.text !== null && widget.text !== undefined) {\n    var lines = widget.text.split(\"&list00\");\n    var num = lines.length;\n    var i = 0;\n    var text = \"\";\n\n    for (i = 0; i < num; i++) {\n      if (i === num - 1) {\n        text += `${lines[i]}`;\n      } else {\n        text += `${lines[i]}\\n`;\n      }\n    }\n  }\n\n  return text;\n};\n\nconst ListWidget = ({\n  widget,\n  updateParagraphPreview,\n  updateHeadingPreview\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }\n}, \"List Widget\", /*#__PURE__*/React.createElement(\"div\", {\n  className: \"float-right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  className: \"btn btn-warning\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-arrow-up wbdv-topic-pill\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faArrowUp,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 58\n  }\n}))), /*#__PURE__*/React.createElement(\"a\", {\n  className: \"btn btn-warning\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-arrow-down wbdv-topic-pill\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faArrowDown,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 60\n  }\n}))))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"textarea\", {\n  className: \"form-control wbdv-bottom-margin-10\",\n  onChange: e => handleKeyPress(e, {\n    widget,\n    updateParagraphPreview\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }\n}, getText(widget)), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }\n}, \"Preview\", /*#__PURE__*/React.createElement(\"select\", {\n  className: \"wbdv-left-margin\",\n  value: widget.headingText,\n  onChange: e => updateHeadingPreview(widget, e.target.value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"option\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }\n}, \"Ordered list\"), /*#__PURE__*/React.createElement(\"option\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 11\n  }\n}, \"Unordered list\"))), widget.headingText !== \"Ordered list\" && createList(widget, \"o\"), widget.headingText === \"Unordered list\" && createList(widget, \"u\")));\n\nexport default ListWidget;","map":{"version":3,"sources":["/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/ListWidget.js"],"names":["React","FontAwesomeIcon","faArrowDown","faArrowUp","handleKeyPress","event","widget","updateParagraphPreview","lines","target","value","split","text","i","length","key","createList","type","undefined","map","item","getText","num","ListWidget","updateHeadingPreview","e","headingText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowDown, faArrowUp} from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst handleKeyPress = (event, {\n  widget,\n  updateParagraphPreview\n}) => {\n  //console.log(\"debugging\",`test: ${event.target.value}`)\n  let lines = event.target.value.split(\"\\n\")\n  //console.log(\"debug\", lines)\n  let text = \"\";\n  for(var i = 0;i < lines.length;i++){\n    if (event.key === \"Backspace\") {\n      text += `${lines[i]} `\n    }\n    else if (i ===lines.length-1){\n      text += `${lines[i]}`\n    }\n    else {\n      text += `${lines[i]}&list00`\n    }\n  }\n\n  //console.log(text)\n  updateParagraphPreview(widget, text)\n\n  // if(event.key === 'Enter'){\n  //   //alert(\"enter pressed\")\n  //   updateParagraphPreview(widget, `${event.target.value} \\n`)\n  // } else {\n  //   updateParagraphPreview(widget, event.target.value)\n  // }\n}\n\nconst createList = (widget, type) => {\n  if (widget.text !== null && widget.text !== undefined) {\n    //console.log(\"widgetText\", widget.text)\n    let lines = widget.text.split(\"&list00\")\n    //var num = lines.length\n    //console.log(num)\n    if (type === \"o\"){\n      return <ol>\n        {lines.map(item => <li>{item}</li>)}\n      </ol>\n    } else {\n      return <ul>\n        {lines.map(item => <li>{item}</li>)}\n      </ul>\n    }\n\n  }\n}\n\nconst getText = (widget) => {\n  if (widget.text !== null && widget.text !== undefined) {\n    var lines = widget.text.split(\"&list00\")\n    var num = lines.length\n    var i = 0;\n    var text = \"\";\n    for (i = 0; i < num; i++) {\n      if (i === num-1) {\n        text += `${lines[i]}`;\n      } else {\n        text += `${lines[i]}\\n`;\n      }\n\n    }\n  }\n    return text\n  }\n\n\n\n\nconst ListWidget = ({\n  widget,\n  updateParagraphPreview,\n  updateHeadingPreview\n}) =>\n  <div>\n    <h3>List Widget\n      <div className=\"float-right\">\n        <a className=\"btn btn-warning\">\n          <i className=\"fas fa-arrow-up wbdv-topic-pill\"><FontAwesomeIcon icon={faArrowUp}/></i>\n        </a>\n        <a className=\"btn btn-warning\">\n          <i className=\"fas fa-arrow-down wbdv-topic-pill\"><FontAwesomeIcon icon={faArrowDown}/></i>\n        </a>\n      </div>\n    </h3>\n    <div>\n      <textarea className=\"form-control wbdv-bottom-margin-10\" onChange={e => handleKeyPress(e, {widget, updateParagraphPreview})}>\n          {getText(widget)}\n      </textarea>\n\n      <h4>Preview\n        <select className=\"wbdv-left-margin\" value={widget.headingText} onChange={e => updateHeadingPreview(widget, e.target.value)}>\n          <option>Ordered list</option>\n          <option>Unordered list</option>\n        </select>\n      </h4>\n      {\n        (widget.headingText !== \"Ordered list\") &&\n        createList(widget, \"o\")\n      }\n      {\n        widget.headingText === \"Unordered list\" &&\n        createList(widget, \"u\")\n      }\n      {/*<p>Debugging: {widget.text}</p>*/}\n    </div>\n\n  </div>\n\n\n  export default ListWidget\n"]},"metadata":{},"sourceType":"module"}