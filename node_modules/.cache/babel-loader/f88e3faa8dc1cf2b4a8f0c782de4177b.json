{"ast":null,"code":"var _jsxFileName = \"/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/WidgetList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport widgetService from \"../services/WidgetService\";\nimport HeadingWidget from \"./HeadingWidget\";\nimport ParagraphWidget from \"./ParagraphWidget\";\nimport ImageWidget from \"./ImageWidget\";\nimport { Button } from \"react-bootstrap\";\nimport ListWidget from \"./ListWidget\";\n\nconst WidgetList = ({\n  widgets = [],\n  topicId,\n  createWidgetForTopic,\n  updateParagraphPreview,\n  deleteWidgetForTopic,\n  saveWidgetForTopicDispatch,\n  updateHeadingPreview,\n  generatedModules,\n  generatedTopics,\n  generatedLessons\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 1\n  }\n}, generatedTopics === false && generatedLessons === false && generatedModules === false && /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, \"Widgets\", /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-primary float-right\",\n  onClick: () => createWidgetForTopic(topicId, document.getElementById(\"newWidgetSelected\").value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, \"Add Widget\"), /*#__PURE__*/React.createElement(\"select\", {\n  id: \"newWidgetSelected\",\n  className: \"float-right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"option\", {\n  value: \"PARAGRAPH\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }\n}, \"Paragraph\"), /*#__PURE__*/React.createElement(\"option\", {\n  value: \"HEADING\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, \"Heading\"), /*#__PURE__*/React.createElement(\"option\", {\n  value: \"IMAGE\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }\n}, \"Image\"), /*#__PURE__*/React.createElement(\"option\", {\n  value: \"LIST\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }\n}, \"List\"))), /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}, topicId !== null && widgets !== null && generatedModules === false && widgets.map(widget => /*#__PURE__*/React.createElement(\"div\", {\n  key: widget.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }\n}, widget.type === \"HEADING\" && /*#__PURE__*/React.createElement(\"div\", {\n  className: \"wbdv-add-border wbdv-highlight-background-dark-selected\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(HeadingWidget, {\n  updateHeadingPreview: updateHeadingPreview,\n  updateParagraphPreview: updateParagraphPreview,\n  widget: widget,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 19\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 19\n  }\n}), /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-danger wbdv-widget-bottom-buttons\",\n  onClick: () => deleteWidgetForTopic(topicId, widget),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 19\n  }\n}, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-success wbdv-widget-bottom-buttons\",\n  onClick: () => saveWidgetForTopicDispatch(topicId, widget),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 19\n  }\n}, \"Save\")), widget.type === \"PARAGRAPH\" && /*#__PURE__*/React.createElement(\"div\", {\n  className: \"wbdv-add-border wbdv-highlight-background-dark-selected\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(ParagraphWidget, {\n  updateParagraphPreview: updateParagraphPreview,\n  widget: widget,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 19\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-danger wbdv-widget-bottom-buttons\",\n  onClick: () => deleteWidgetForTopic(topicId, widget),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 21\n  }\n}, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-success wbdv-widget-bottom-buttons\",\n  onClick: () => saveWidgetForTopicDispatch(topicId, widget),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 21\n  }\n}, \"Save\"))), widget.type === \"IMAGE\" && /*#__PURE__*/React.createElement(\"div\", {\n  className: \"wbdv-add-border wbdv-highlight-background-dark-selected\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(ImageWidget, {\n  updateHeadingPreview: updateHeadingPreview,\n  updateParagraphPreview: updateParagraphPreview,\n  widget: widget,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 19\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-danger wbdv-widget-bottom-buttons\",\n  onClick: () => deleteWidgetForTopic(topicId, widget),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 21\n  }\n}, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-success wbdv-widget-bottom-buttons\",\n  onClick: () => saveWidgetForTopicDispatch(topicId, widget),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 21\n  }\n}, \"Save\"))), widget.type === \"LIST\" && /*#__PURE__*/React.createElement(\"div\", {\n  className: \"wbdv-add-border wbdv-highlight-background-dark-selected\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(ListWidget, {\n  updateHeadingPreview: updateHeadingPreview,\n  updateParagraphPreview: updateParagraphPreview,\n  widget: widget,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 19\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-danger wbdv-widget-bottom-buttons\",\n  onClick: () => deleteWidgetForTopic(topicId, widget),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 21\n  }\n}, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n  className: \"btn btn-success wbdv-widget-bottom-buttons\",\n  onClick: () => saveWidgetForTopicDispatch(topicId, widget),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 21\n  }\n}, \"Save\")))))), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }\n})));\n\nconst stateToPropMapper = state => ({\n  widgets: state.widgetReducer.widgets,\n  topicId: state.widgetReducer.topicId,\n  generatedModules: state.moduleReducer.generatedModules,\n  generatedTopics: state.topicReducer.generatedTopics,\n  generatedLessons: state.lessonReducer.generatedLessons\n});\n\nconst dispatchMapper = dispatch => ({\n  createWidgetForTopic: (topicId, type) => widgetService.createWidgetForTopic(topicId, {\n    name: \"New Widget\",\n    type: type\n  }).then(widget => dispatch({\n    type: \"CREATE_WIDGET_FOR_TOPIC\",\n    widget\n  })),\n  deleteWidgetForTopic: (topicId, widget) => widgetService.deleteWidget(topicId, widget).then(widget => dispatch({\n    type: \"DELETE_WIDGET_FOR_TOPIC\",\n    widget\n  })),\n  saveWidgetForTopicDispatch: (topicId, widget) => widgetService.saveWidgetForTopic(topicId, widget).then(widget => dispatch({\n    type: \"SAVE_WIDGET_FOR_TOPIC\",\n    widget\n  })),\n  updateParagraphPreview: (widget, e) => {\n    dispatch({\n      type: \"UPDATE_PARAGRAPH_PREVIEW\",\n      widget,\n      e\n    });\n  },\n  updateHeadingPreview: (widget, e) => {\n    dispatch({\n      type: \"UPDATE_HEADING_PREVIEW\",\n      widget,\n      e\n    });\n  }\n});\n\nexport default connect(stateToPropMapper, dispatchMapper)(WidgetList);","map":{"version":3,"sources":["/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/WidgetList.js"],"names":["React","connect","widgetService","HeadingWidget","ParagraphWidget","ImageWidget","Button","ListWidget","WidgetList","widgets","topicId","createWidgetForTopic","updateParagraphPreview","deleteWidgetForTopic","saveWidgetForTopicDispatch","updateHeadingPreview","generatedModules","generatedTopics","generatedLessons","document","getElementById","value","map","widget","id","type","stateToPropMapper","state","widgetReducer","moduleReducer","topicReducer","lessonReducer","dispatchMapper","dispatch","name","then","deleteWidget","saveWidgetForTopic","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport widgetService from \"../services/WidgetService\"\nimport HeadingWidget from \"./HeadingWidget\";\nimport ParagraphWidget from \"./ParagraphWidget\";\nimport ImageWidget from \"./ImageWidget\";\nimport {Button} from \"react-bootstrap\";\nimport ListWidget from \"./ListWidget\";\nconst WidgetList = (\n    {\n      widgets = [],\n        topicId,\n        createWidgetForTopic,\n        updateParagraphPreview,\n        deleteWidgetForTopic,\n        saveWidgetForTopicDispatch,\n        updateHeadingPreview,\n        generatedModules,\n        generatedTopics,\n        generatedLessons\n    }) =>\n<div>\n{ generatedTopics === false && generatedLessons === false && generatedModules === false &&\n  <div>\n    <h3>Widgets\n      <Button className=\"btn btn-primary float-right\"\n              onClick={() => createWidgetForTopic(topicId,\n                  document.getElementById(\"newWidgetSelected\").value)}>\n        Add Widget\n      </Button>\n      <select id=\"newWidgetSelected\" className=\"float-right\">\n        <option value=\"PARAGRAPH\">Paragraph</option>\n        <option value=\"HEADING\">Heading</option>\n        <option value=\"IMAGE\">Image</option>\n        <option value=\"LIST\">List</option>\n      </select>\n    </h3>\n    <ul>\n      {\n        topicId !== null && widgets !== null && generatedModules === false &&\n        widgets.map(widget =>\n            <div key={widget.id}>\n              {\n                widget.type === \"HEADING\" &&\n                <div\n                    className=\"wbdv-add-border wbdv-highlight-background-dark-selected\">\n                  <HeadingWidget updateHeadingPreview={updateHeadingPreview}\n                                 updateParagraphPreview={updateParagraphPreview}\n                                 widget={widget}/>\n                  <br/>\n                  <Button className=\"btn btn-danger wbdv-widget-bottom-buttons\"\n                          onClick={() => deleteWidgetForTopic(topicId, widget)}>\n                    Delete\n                  </Button>\n                  <Button className=\"btn btn-success wbdv-widget-bottom-buttons\"\n                          onClick={() => saveWidgetForTopicDispatch(topicId,\n                              widget)}>\n                    Save\n                  </Button>\n                </div>\n              }\n              {\n                widget.type === \"PARAGRAPH\" &&\n                <div\n                    className=\"wbdv-add-border wbdv-highlight-background-dark-selected\">\n                  <ParagraphWidget\n                      updateParagraphPreview={updateParagraphPreview}\n                      widget={widget}/>\n                  <div>\n                    <br/>\n                    <Button\n                        className=\"btn btn-danger wbdv-widget-bottom-buttons\"\n                        onClick={() => deleteWidgetForTopic(topicId, widget)}>\n                      Delete\n                    </Button>\n                    <Button\n                        className=\"btn btn-success wbdv-widget-bottom-buttons\"\n                        onClick={() => saveWidgetForTopicDispatch(topicId,\n                            widget)}>\n                      Save\n                    </Button>\n                  </div>\n                </div>\n\n              }\n              {\n                widget.type === \"IMAGE\" &&\n                <div\n                    className=\"wbdv-add-border wbdv-highlight-background-dark-selected\">\n                  <ImageWidget updateHeadingPreview={updateHeadingPreview}\n                               updateParagraphPreview={updateParagraphPreview}\n                               widget={widget}/>\n                  <div>\n                    <br/>\n                    <Button\n                        className=\"btn btn-danger wbdv-widget-bottom-buttons\"\n                        onClick={() => deleteWidgetForTopic(topicId, widget)}>\n                      Delete\n                    </Button>\n                    <Button\n                        className=\"btn btn-success wbdv-widget-bottom-buttons\"\n                        onClick={() => saveWidgetForTopicDispatch(topicId,\n                            widget)}>\n                      Save\n                    </Button>\n                  </div>\n                </div>\n\n              }\n              {\n                widget.type === \"LIST\" &&\n                <div\n                    className=\"wbdv-add-border wbdv-highlight-background-dark-selected\">\n                  <ListWidget updateHeadingPreview={updateHeadingPreview}\n                              updateParagraphPreview={updateParagraphPreview}\n                              widget={widget}/>\n                  <div>\n                    <br/>\n                    <Button\n                        className=\"btn btn-danger wbdv-widget-bottom-buttons\"\n                        onClick={() => deleteWidgetForTopic(topicId, widget)}>\n                      Delete\n                    </Button>\n                    <Button\n                        className=\"btn btn-success wbdv-widget-bottom-buttons\"\n                        onClick={() => saveWidgetForTopicDispatch(topicId,\n                            widget)}>\n                      Save\n                    </Button>\n                  </div>\n                </div>\n\n              }\n            </div>)\n      }\n    </ul>\n    <br/>\n  </div>\n}\n</div>\n\nconst stateToPropMapper = (state) => ({\n  widgets: state.widgetReducer.widgets,\n  topicId: state.widgetReducer.topicId,\n  generatedModules: state.moduleReducer.generatedModules,\n  generatedTopics: state.topicReducer.generatedTopics,\n  generatedLessons: state.lessonReducer.generatedLessons\n\n})\n\nconst dispatchMapper = (dispatch) => ({\n  createWidgetForTopic: (topicId, type) =>\n    widgetService.createWidgetForTopic(topicId, {\n      name: \"New Widget\",\n      type: type\n    }).then(widget => dispatch({\n      type: \"CREATE_WIDGET_FOR_TOPIC\",\n      widget\n    })),\n  deleteWidgetForTopic: (topicId, widget) =>\n    widgetService.deleteWidget(topicId, widget)\n    .then(widget => dispatch({\n      type: \"DELETE_WIDGET_FOR_TOPIC\",\n      widget\n    })),\n  saveWidgetForTopicDispatch: (topicId, widget) =>\n    widgetService.saveWidgetForTopic(topicId, widget)\n    .then(widget => dispatch({\n      type: \"SAVE_WIDGET_FOR_TOPIC\",\n      widget\n    })),\n  updateParagraphPreview: (widget, e) => {\n    dispatch({\n      type: \"UPDATE_PARAGRAPH_PREVIEW\",\n      widget,\n      e\n    })\n  },\n  updateHeadingPreview: (widget, e) => {\n    dispatch({\n      type: \"UPDATE_HEADING_PREVIEW\",\n      widget,\n      e\n    })\n  }\n\n})\n\n\nexport default connect(stateToPropMapper, dispatchMapper)(WidgetList)\n"]},"metadata":{},"sourceType":"module"}