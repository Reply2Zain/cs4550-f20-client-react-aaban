{"ast":null,"code":"var _jsxFileName = \"/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/ListWidget.js\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport widgetService from \"../services/WidgetService\";\nimport { connect } from \"react-redux\";\nimport { create } from \"@material-ui/core/styles/transitions\";\n\nconst handleKeyPress = (event, {\n  widget,\n  updateParagraphPreview\n}) => {\n  //console.log(\"debugging\",`test: ${event.target.value}`)\n  let lines = event.target.value.split(\"\\n\"); //console.log(\"debug\", lines)\n\n  let text = \"\";\n\n  for (var i = 0; i < lines.length; i++) {\n    if (event.key === \"Backspace\") {\n      text += `${lines[i]} `;\n    } else if (i === lines.length - 1) {\n      text += `${lines[i]}`;\n    } else {\n      text += `${lines[i]}&list00`;\n    }\n  } //console.log(text)\n\n\n  updateParagraphPreview(widget, text); // if(event.key === 'Enter'){\n  //   //alert(\"enter pressed\")\n  //   updateParagraphPreview(widget, `${event.target.value} \\n`)\n  // } else {\n  //   updateParagraphPreview(widget, event.target.value)\n  // }\n};\n\nconst createList = (widget, type) => {\n  if (widget.text !== null) {\n    //console.log(\"widgetText\", widget.text)\n    let lines = widget.text.split(\"&list00\"); //var num = lines.length\n    //console.log(num)\n\n    if (type === \"o\") {\n      return /*#__PURE__*/React.createElement(\"ol\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }\n      }, lines.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }\n      }, item)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      }, lines.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }\n      }, item)));\n    }\n  }\n};\n\nconst getText = widget => {\n  if (widget.text !== null) {\n    var lines = widget.text.split(\"&list00\");\n    var num = lines.length;\n    var i = 0;\n    var text = \"\";\n\n    for (i = 0; i < num; i++) {\n      if (i === num - 1) {\n        text += `${lines[i]}`;\n      } else {\n        text += `${lines[i]}\\n`;\n      }\n    }\n  }\n\n  return text;\n};\n\nconst ListWidget = ({\n  widget,\n  updateParagraphPreview,\n  updateHeadingPreview\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }\n}, \"List Widget\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"select\", {\n  value: widget.headingText,\n  onChange: e => updateHeadingPreview(widget, e.target.value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"option\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }\n}, \"Ordered list\"), /*#__PURE__*/React.createElement(\"option\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }\n}, \"Unordered list\")), /*#__PURE__*/React.createElement(\"textarea\", {\n  className: \"form-control\",\n  onChange: e => handleKeyPress(e, {\n    widget,\n    updateParagraphPreview\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }\n}, getText(widget)), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }\n}, \"Preview\"), (widget.headingText === null || widget.headingText === \"Ordered list\") && createList(widget, \"o\"), widget.headingText === \"Unordered list\" && createList(widget, \"u\")));\n\nexport default ListWidget;","map":{"version":3,"sources":["/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/ListWidget.js"],"names":["React","Button","widgetService","connect","create","handleKeyPress","event","widget","updateParagraphPreview","lines","target","value","split","text","i","length","key","createList","type","map","item","getText","num","ListWidget","updateHeadingPreview","headingText","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport widgetService from \"../services/WidgetService\";\nimport {connect} from \"react-redux\";\nimport {create} from \"@material-ui/core/styles/transitions\";\n\n\nconst handleKeyPress = (event, {\n  widget,\n  updateParagraphPreview\n}) => {\n  //console.log(\"debugging\",`test: ${event.target.value}`)\n  let lines = event.target.value.split(\"\\n\")\n  //console.log(\"debug\", lines)\n  let text = \"\";\n  for(var i = 0;i < lines.length;i++){\n    if (event.key === \"Backspace\") {\n      text += `${lines[i]} `\n    }\n    else if (i ===lines.length-1){\n      text += `${lines[i]}`\n    }\n    else {\n      text += `${lines[i]}&list00`\n    }\n  }\n\n  //console.log(text)\n  updateParagraphPreview(widget, text)\n\n  // if(event.key === 'Enter'){\n  //   //alert(\"enter pressed\")\n  //   updateParagraphPreview(widget, `${event.target.value} \\n`)\n  // } else {\n  //   updateParagraphPreview(widget, event.target.value)\n  // }\n}\n\nconst createList = (widget, type) => {\n  if (widget.text !== null) {\n    //console.log(\"widgetText\", widget.text)\n    let lines = widget.text.split(\"&list00\")\n    //var num = lines.length\n    //console.log(num)\n    if (type === \"o\"){\n      return <ol>\n        {lines.map(item => <li>{item}</li>)}\n      </ol>\n    } else {\n      return <ul>\n        {lines.map(item => <li>{item}</li>)}\n      </ul>\n    }\n\n  }\n}\n\nconst getText = (widget) => {\n  if (widget.text !== null) {\n    var lines = widget.text.split(\"&list00\")\n    var num = lines.length\n    var i = 0;\n    var text = \"\";\n    for (i = 0; i < num; i++) {\n      if (i === num-1) {\n        text += `${lines[i]}`;\n      } else {\n        text += `${lines[i]}\\n`;\n      }\n\n    }\n  }\n    return text\n  }\n\n\n\n\nconst ListWidget = ({\n  widget,\n  updateParagraphPreview,\n  updateHeadingPreview\n}) =>\n  <div>\n    <h3>List Widget</h3>\n    <div>\n      <select value={widget.headingText} onChange={e => updateHeadingPreview(widget, e.target.value)}>\n        <option>Ordered list</option>\n        <option>Unordered list</option>\n      </select>\n      <textarea className=\"form-control\" onChange={e => handleKeyPress(e, {widget, updateParagraphPreview})}>\n          {getText(widget)}\n      </textarea>\n\n      <h4>Preview</h4>\n      {\n        (widget.headingText === null || widget.headingText === \"Ordered list\") &&\n        createList(widget, \"o\")\n      }\n      {\n        widget.headingText === \"Unordered list\" &&\n        createList(widget, \"u\")\n      }\n      {/*<p>Debugging: {widget.text}</p>*/}\n    </div>\n\n  </div>\n\n\n  export default ListWidget\n"]},"metadata":{},"sourceType":"module"}