{"ast":null,"code":"const topicsUrl = \"http://localhost:8080/api/topics\";\nexport const findWidgetsForTopic = topicId => fetch(`${topicsUrl}/${topicId}/widgets`).then(response => response.json());\nexport const createWidgetForTopic = (topicId, widget) => fetch(`${topicsUrl}/${topicId}/widgets`, {\n  method: \"POST\",\n  body: JSON.stringify({ ...widget,\n    topicId\n  }),\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n}).then(response => response.json());\nexport const deleteWidget = (topicId, widget) => {\n  fetch(`${topicsUrl}/${topicId}/widgets/${widget.id}`, {\n    method: \"DELETE\"\n  }).then(response => response.json());\n};\nexport default {\n  findWidgetsForTopic,\n  createWidgetForTopic,\n  deleteWidget\n};","map":{"version":3,"sources":["/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/services/WidgetService.js"],"names":["topicsUrl","findWidgetsForTopic","topicId","fetch","then","response","json","createWidgetForTopic","widget","method","body","JSON","stringify","headers","deleteWidget","id"],"mappings":"AAAA,MAAMA,SAAS,GAAG,kCAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,OAAD,IACjCC,KAAK,CAAE,GAAEH,SAAU,IAAGE,OAAQ,UAAzB,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,CADK;AAKP,OAAO,MAAMC,oBAAoB,GAAG,CAACL,OAAD,EAAUM,MAAV,KAChCL,KAAK,CAAE,GAAEH,SAAU,IAAGE,OAAQ,UAAzB,EACD;AACEO,EAAAA,MAAM,EAAE,MADV;AAEEC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EACnB,GAAGJ,MADgB;AAEnBN,IAAAA;AAFmB,GAAf,CAFR;AAMEW,EAAAA,OAAO,EAAE;AACP,oBAAiB;AADV;AANX,CADC,CAAL,CAWHT,IAXG,CAWEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXd,CADG;AAcP,OAAO,MAAMQ,YAAY,GAAG,CAACZ,OAAD,EAAUM,MAAV,KAAqB;AAC/CL,EAAAA,KAAK,CAAE,GAAEH,SAAU,IAAGE,OAAQ,YAAWM,MAAM,CAACO,EAAG,EAA9C,EAAiD;AACpDN,IAAAA,MAAM,EAAE;AAD4C,GAAjD,CAAL,CAGCL,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB;AAID,CALM;AAMP,eAAe;AACbL,EAAAA,mBADa;AACQM,EAAAA,oBADR;AAC8BO,EAAAA;AAD9B,CAAf","sourcesContent":["const topicsUrl = \"http://localhost:8080/api/topics\"\n\nexport const findWidgetsForTopic = (topicId) =>\n  fetch(`${topicsUrl}/${topicId}/widgets`)\n  .then(response => response.json())\n\n\nexport const createWidgetForTopic = (topicId, widget) =>\n    fetch(`${topicsUrl}/${topicId}/widgets`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            ...widget,\n            topicId\n          }),\n          headers: {\n            \"content-type\" : \"application/json\"\n          }\n        })\n.then(response => response.json())\n\nexport const deleteWidget = (topicId, widget) => {\n  fetch(`${topicsUrl}/${topicId}/widgets/${widget.id}`, {\n    method: \"DELETE\"\n  })\n  .then(response => response.json())\n}\nexport default {\n  findWidgetsForTopic, createWidgetForTopic, deleteWidget\n}\n\n"]},"metadata":{},"sourceType":"module"}