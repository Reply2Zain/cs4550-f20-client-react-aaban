{"ast":null,"code":"const url = \"https://wbdv-generic-server.herokuapp.com/api/aaban/modules\";\nexport const findModule = moduleId => fetch(`${url}/${moduleId}`).then(response => response.json());\nexport const findAllModules = () => fetch(url).then(response => response.json());\nexport const deleteModule = moduleId => fetch(`${url}/${moduleId}`, {\n  method: 'DELETE'\n}).then(response => response.json());\nexport const createModule = module => fetch(url, {\n  method: 'POST',\n  body: JSON.stringify(module),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\nexport const updateModule = (moduleId, newModule) => fetch(`${url}/${moduleId}`, {\n  method: 'PUT',\n  body: JSON.stringify(newModule),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\nexport const findModulesForCourse = courseId => fetch(`${url}/${courseId}/modules`).then(response => response.json());\nexport const createModuleForCourse = (courseId, newModule) => fetch(`${url}/${courseId}/modules`, {\n  method: \"POST\",\n  body: JSON.stringify(newModule),\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n}).then(response => response.json());\nexport default {\n  findAllModules,\n  deleteModule,\n  createModule,\n  findModule,\n  findModulesForCourse,\n  createModuleForCourse\n};","map":{"version":3,"sources":["/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/services/ModuleService.js"],"names":["url","findModule","moduleId","fetch","then","response","json","findAllModules","deleteModule","method","createModule","module","body","JSON","stringify","headers","updateModule","newModule","findModulesForCourse","courseId","createModuleForCourse"],"mappings":"AAAA,MAAMA,GAAG,GAAG,6DAAZ;AAEA,OAAO,MAAMC,UAAU,GAAGC,QAAQ,IAC9BC,KAAK,CAAE,GAAEH,GAAI,IAAGE,QAAS,EAApB,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,CADG;AAIP,OAAO,MAAMC,cAAc,GAAG,MAC1BJ,KAAK,CAACH,GAAD,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,CADG;AAIP,OAAO,MAAME,YAAY,GAAIN,QAAD,IACxBC,KAAK,CAAE,GAAEH,GAAI,IAAGE,QAAS,EAApB,EAAuB;AAC1BO,EAAAA,MAAM,EAAE;AADkB,CAAvB,CAAL,CAGCL,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,CADG;AAMP,OAAO,MAAMI,YAAY,GAAIC,MAAD,IACxBR,KAAK,CAACH,GAAD,EAAM;AACTS,EAAAA,MAAM,EAAE,MADC;AAETG,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAFG;AAGTI,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAHA,CAAN,CAAL,CAOCX,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,CADG;AAUP,OAAO,MAAMU,YAAY,GAAG,CAACd,QAAD,EAAWe,SAAX,KACxBd,KAAK,CAAE,GAAEH,GAAI,IAAGE,QAAS,EAApB,EAAuB;AAC1BO,EAAAA,MAAM,EAAE,KADkB;AAE1BG,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,SAAf,CAFoB;AAG1BF,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAHiB,CAAvB,CAAL,CAOCX,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,CADG;AAUP,OAAO,MAAMY,oBAAoB,GAAIC,QAAD,IAClChB,KAAK,CAAE,GAAEH,GAAI,IAAGmB,QAAS,UAApB,CAAL,CACCf,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,CADK;AAIP,OAAO,MAAMc,qBAAqB,GAAG,CAACD,QAAD,EAAWF,SAAX,KACjCd,KAAK,CAAE,GAAEH,GAAI,IAAGmB,QAAS,UAApB,EAA+B;AAClCV,EAAAA,MAAM,EAAE,MAD0B;AAElCG,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,SAAf,CAF4B;AAGlCF,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAHyB,CAA/B,CAAL,CAOCX,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,CADG;AAUP,eAAe;AACbC,EAAAA,cADa;AACGC,EAAAA,YADH;AACiBE,EAAAA,YADjB;AAC+BT,EAAAA,UAD/B;AAC2CiB,EAAAA,oBAD3C;AACiEE,EAAAA;AADjE,CAAf","sourcesContent":["const url = \"https://wbdv-generic-server.herokuapp.com/api/aaban/modules\"\n\nexport const findModule = moduleId =>\n    fetch(`${url}/${moduleId}`)\n    .then(response => response.json())\n\nexport const findAllModules = () =>\n    fetch(url)\n    .then(response => response.json())\n\nexport const deleteModule = (moduleId) =>\n    fetch(`${url}/${moduleId}`, {\n      method: 'DELETE'\n    })\n    .then(response => response.json())\n\nexport const createModule = (module) =>\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(module),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n\nexport const updateModule = (moduleId, newModule) =>\n    fetch(`${url}/${moduleId}`, {\n      method: 'PUT',\n      body: JSON.stringify(newModule),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n\nexport const findModulesForCourse = (courseId) =>\n  fetch(`${url}/${courseId}/modules`)\n  .then(response => response.json())\n\nexport const createModuleForCourse = (courseId, newModule) =>\n    fetch(`${url}/${courseId}/modules`, {\n      method: \"POST\",\n      body: JSON.stringify(newModule),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n    .then(response => response.json())\n\nexport default {\n  findAllModules, deleteModule, createModule, findModule, findModulesForCourse, createModuleForCourse\n}"]},"metadata":{},"sourceType":"module"}