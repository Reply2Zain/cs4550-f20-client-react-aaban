{"ast":null,"code":"var _jsxFileName = \"/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/ListWidget.js\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport widgetService from \"../services/WidgetService\";\nimport { connect } from \"react-redux\";\nimport { create } from \"@material-ui/core/styles/transitions\";\n\nconst handleKeyPress = (event, {\n  widget,\n  updateParagraphPreview\n}) => {\n  var lines = event.target.value.split(\"\\n\");\n  let text = \"\";\n\n  for (var i = 0; i < lines.length; i++) {\n    if (i === lines.length - 1 && event.key !== \"Enter\") {\n      text += `${lines[i]}${event.key}&list00 `;\n    } else {\n      text += `${lines[i]}&list00 `;\n    }\n  }\n\n  console.log(text);\n  updateParagraphPreview(widget, text); // if(event.key === 'Enter'){\n  //   //alert(\"enter pressed\")\n  //   updateParagraphPreview(widget, `${event.target.value} \\n`)\n  // } else {\n  //   updateParagraphPreview(widget, event.target.value)\n  // }\n};\n\nconst createList = widget => {\n  if (widget.text !== null) {\n    var lines = widget.text.split(\"&list00 \");\n    var num = lines.length;\n    lines[num - 1] = undefined;\n    return /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, lines.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }\n    }, item)));\n  }\n};\n\nconst ListWidget = ({\n  widget,\n  updateParagraphPreview\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }\n}, \"List Widget\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"textarea\", {\n  className: \"form-control\",\n  onKeyPress: e => handleKeyPress(e, {\n    widget,\n    updateParagraphPreview\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}, widget.text), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }\n}, \"Preview\"), console.log(createList.length), createList.length > 3 && createList(widget).toString().substr(0, 3), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }\n}, widget.text)));\n\nexport default ListWidget;","map":{"version":3,"sources":["/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/ListWidget.js"],"names":["React","Button","widgetService","connect","create","handleKeyPress","event","widget","updateParagraphPreview","lines","target","value","split","text","i","length","key","console","log","createList","num","undefined","map","item","ListWidget","e","toString","substr"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,sCAArB;;AAGA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQ;AAC7BC,EAAAA,MAD6B;AAE7BC,EAAAA;AAF6B,CAAR,KAGjB;AACJ,MAAIC,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,IAAzB,CAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGL,KAAK,CAACM,MAAxB,EAA+BD,CAAC,EAAhC,EAAmC;AACjC,QAAIA,CAAC,KAAKL,KAAK,CAACM,MAAN,GAAe,CAArB,IAA0BT,KAAK,CAACU,GAAN,KAAc,OAA5C,EAAoD;AAClDH,MAAAA,IAAI,IAAK,GAAEJ,KAAK,CAACK,CAAD,CAAI,GAAER,KAAK,CAACU,GAAI,UAAhC;AACD,KAFD,MAEO;AACLH,MAAAA,IAAI,IAAK,GAAEJ,KAAK,CAACK,CAAD,CAAI,UAApB;AACD;AACF;;AAEDG,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAL,EAAAA,sBAAsB,CAACD,MAAD,EAASM,IAAT,CAAtB,CAZI,CAcJ;AACA;AACA;AACA;AACA;AACA;AACD,CAvBD;;AAyBA,MAAMM,UAAU,GAAIZ,MAAD,IAAY;AAC7B,MAAIA,MAAM,CAACM,IAAP,KAAgB,IAApB,EAA0B;AACxB,QAAIJ,KAAK,GAAGF,MAAM,CAACM,IAAP,CAAYD,KAAZ,CAAkB,UAAlB,CAAZ;AACE,QAAIQ,GAAG,GAAGX,KAAK,CAACM,MAAhB;AACFN,IAAAA,KAAK,CAACW,GAAG,GAAC,CAAL,CAAL,GAAeC,SAAf;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJZ,KAAK,CAACa,GAAN,CAAUC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAAlB,CADI,CAAP;AAGD;AACF,CATD;;AAYA,MAAMC,UAAU,GAAG,CAAC;AAClBjB,EAAAA,MADkB;AAElBC,EAAAA;AAFkB,CAAD,kBAIjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAU,EAAA,SAAS,EAAC,cAApB;AAAmC,EAAA,UAAU,EAAEiB,CAAC,IAAIpB,cAAc,CAACoB,CAAD,EAAI;AAAClB,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAJ,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,MAAM,CAACM,IADV,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAOII,OAAO,CAACC,GAAR,CAAYC,UAAU,CAACJ,MAAvB,CAPJ,EASII,UAAU,CAACJ,MAAX,GAAoB,CAApB,IACAI,UAAU,CAACZ,MAAD,CAAV,CAAmBmB,QAAnB,GAA8BC,MAA9B,CAAqC,CAArC,EAAuC,CAAvC,CAVJ,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIpB,MAAM,CAACM,IAAX,CAbF,CAFF,CAJF;;AAyBE,eAAeW,UAAf","sourcesContent":["import React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport widgetService from \"../services/WidgetService\";\nimport {connect} from \"react-redux\";\nimport {create} from \"@material-ui/core/styles/transitions\";\n\n\nconst handleKeyPress = (event, {\n  widget,\n  updateParagraphPreview\n}) => {\n  var lines = event.target.value.split(\"\\n\")\n  let text = \"\";\n  for(var i = 0;i < lines.length;i++){\n    if (i === lines.length - 1 && event.key !== \"Enter\"){\n      text += `${lines[i]}${event.key}&list00 `\n    } else {\n      text += `${lines[i]}&list00 `\n    }\n  }\n\n  console.log(text)\n  updateParagraphPreview(widget, text)\n\n  // if(event.key === 'Enter'){\n  //   //alert(\"enter pressed\")\n  //   updateParagraphPreview(widget, `${event.target.value} \\n`)\n  // } else {\n  //   updateParagraphPreview(widget, event.target.value)\n  // }\n}\n\nconst createList = (widget) => {\n  if (widget.text !== null) {\n    var lines = widget.text.split(\"&list00 \")\n      var num = lines.length\n    lines[num-1] = undefined\n    return <ol>\n      {lines.map(item => <li>{item}</li>)}\n    </ol>\n  }\n}\n\n\nconst ListWidget = ({\n  widget,\n  updateParagraphPreview\n}) =>\n  <div>\n    <h3>List Widget</h3>\n    <div>\n      <textarea className=\"form-control\" onKeyPress={e => handleKeyPress(e, {widget, updateParagraphPreview} )}>\n        {widget.text}\n      </textarea>\n\n      <h4>Preview</h4>\n      {\n        console.log(createList.length)\n      }\n      { createList.length > 3 &&\n        createList(widget).toString().substr(0,3)\n      }\n\n      <p>{widget.text}</p>\n    </div>\n\n  </div>\n\n\n  export default ListWidget\n"]},"metadata":{},"sourceType":"module"}