{"ast":null,"code":"var _jsxFileName = \"/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/CourseEditor.js\";\nimport React from \"react\";\nimport CourseListComponent from \"../components/CourseListComponent\";\nimport CourseEditorComponent from \"../components/CourseEditor/CourseEditorComponent\";\nimport { findAllCourses, deleteCourse, createCourse, updateCourse } from \"../services/CourseService\";\nimport \"../css/styles.css\";\nimport \"../css/course-manager-container.style.client.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass CourseEditor extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      layout: 'table',\n      showEditor: false,\n      newCourseTitle: \"New Course Title\",\n      courses: []\n    };\n\n    this.componentDidMount = async () => {\n      const courses = await findAllCourses();\n      this.setState({\n        courses: courses\n      });\n    };\n\n    this.toggle = () => this.setState(prevState => {\n      if (prevState.layout === 'table') {\n        return {\n          layout: 'grid'\n        };\n      } else {\n        return {\n          layout: 'table'\n        };\n      }\n    });\n\n    this.deleteCourse = course => deleteCourse(course._id).then(status => {\n      this.setState(prevState => {\n        return {\n          courses: prevState.courses.filter(function (crs) {\n            return crs._id !== course._id;\n          })\n        };\n      });\n    });\n\n    this.updateCourse = course => updateCourse(course._id, course).then(async () => {\n      const courses = await findAllCourses();\n      this.setState({\n        courses: courses\n      });\n    });\n\n    this.addCourse = () => createCourse({\n      title: this.state.newCourseTitle\n    }).then(actualCourse => this.setState(prevState => {\n      return {\n        courses: [...prevState.courses, actualCourse]\n      };\n    }));\n\n    this.showEditor = () => this.setState({\n      showEditor: true\n    });\n\n    this.hideEditor = () => this.setState({\n      showEditor: false\n    });\n\n    this.updateForm = newState => {\n      this.setState(newState);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => /*#__PURE__*/React.createElement(CourseListComponent, {\n        toggle: this.toggle,\n        updateForm: this.updateForm,\n        newCourseTitle: this.state.newCourseTitle,\n        addCourse: this.addCourse,\n        layout: this.state.layout,\n        courses: this.state.courses,\n        deleteCourse: this.deleteCourse,\n        updateCourse: this.updateCourse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/grid\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(CourseListComponent, Object.assign({}, props, {\n        toggle: this.toggle,\n        updateForm: this.updateForm,\n        newCourseTitle: this.state.newCourseTitle,\n        addCourse: this.addCourse,\n        layout: \"grid\",\n        toggleLink: \"table\",\n        courses: this.state.courses,\n        deleteCourse: this.deleteCourse,\n        updateCourse: this.updateCourse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 22\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/table\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(CourseListComponent, Object.assign({}, props, {\n        toggle: this.toggle,\n        updateForm: this.updateForm,\n        newCourseTitle: this.state.newCourseTitle,\n        addCourse: this.addCourse,\n        layout: \"table\",\n        toggleLink: \"grid\",\n        courses: this.state.courses,\n        deleteCourse: this.deleteCourse,\n        updateCourse: this.updateCourse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 22\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/course-editor/:courseId\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(CourseEditorComponent, Object.assign({}, props, {\n        courseId: props.match.params.courseId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 22\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/course-editor/:courseId/module/:moduleId\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(CourseEditorComponent, Object.assign({}, props, {\n        courseId: props.match.params.courseId,\n        moduleId: props.match.params.moduleId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 22\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/course-editor/:courseId/module/:moduleId/lesson/:lessonId\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(CourseEditorComponent, Object.assign({}, props, {\n        courseId: props.match.params.courseId,\n        moduleId: props.match.params.moduleId,\n        lessonId: props.match.params.lessonId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 22\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/course-editor/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(CourseEditorComponent, Object.assign({}, props, {\n        courseId: props.match.params.courseId,\n        moduleId: props.match.params.moduleId,\n        lessonId: props.match.params.lessonId,\n        topicId: props.match.params.topicId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 22\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default CourseManagerContainer;","map":{"version":3,"sources":["/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/src/components/CourseEditor.js"],"names":["React","CourseListComponent","CourseEditorComponent","findAllCourses","deleteCourse","createCourse","updateCourse","BrowserRouter","Router","Route","CourseEditor","Component","state","layout","showEditor","newCourseTitle","courses","componentDidMount","setState","toggle","prevState","course","_id","then","status","filter","crs","addCourse","title","actualCourse","hideEditor","updateForm","newState","render","props","match","params","courseId","moduleId","lessonId","topicId","CourseManagerContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CourseListComponent from \"../components/CourseListComponent\"\nimport CourseEditorComponent from \"../components/CourseEditor/CourseEditorComponent\";\nimport { findAllCourses, deleteCourse, createCourse, updateCourse } from \"../services/CourseService\";\nimport \"../css/styles.css\"\nimport \"../css/course-manager-container.style.client.css\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\n\nclass CourseEditor extends React.Component {\n  state = {\n    layout: 'table',\n    showEditor: false,\n    newCourseTitle: \"New Course Title\",\n    courses: []\n  }\n\n  componentDidMount = async () => {\n    const courses = await findAllCourses()\n    this.setState({\n      courses: courses\n    })\n  }\n\n  toggle = () =>\n      this.setState(prevState => {\n        if (prevState.layout === 'table') {\n          return ({\n            layout: 'grid'\n          })\n        } else {\n          return ({\n            layout: 'table'\n          })\n        }\n      })\n\n  deleteCourse = (course) =>\n      deleteCourse(course._id)\n      .then(status => {\n        this.setState(prevState => {\n          return ({\n            courses: prevState\n            .courses\n            .filter(function (crs) {\n              return crs._id !== course._id\n            })\n          })\n        })\n      })\n\n  updateCourse = (course) =>\n      updateCourse(course._id, course).then(async () => {\n        const courses = await findAllCourses();\n        this.setState({\n          courses: courses\n        });\n      })\n\n  addCourse = () =>\n      createCourse({\n        title: this.state.newCourseTitle\n      }).then(actualCourse => this.setState(prevState => {\n            return ({\n              courses: [\n                ...prevState.courses,\n                actualCourse\n              ]\n            })\n          })\n      )\n\n  showEditor = () =>\n      this.setState({\n        showEditor: true\n      })\n\n  hideEditor = () =>\n      this.setState({\n        showEditor: false\n      })\n\n  updateForm = (newState) => {\n    this.setState(newState)\n  }\n\n  render() {\n    return (\n        <Router>\n          <Route path=\"/\"\n                 exact={true}\n                 render={() =>\n                     <CourseListComponent\n                         toggle={this.toggle}\n                         updateForm={this.updateForm}\n                         newCourseTitle={this.state.newCourseTitle}\n                         addCourse={this.addCourse}\n                         layout={this.state.layout}\n                         courses={this.state.courses}\n                         deleteCourse={this.deleteCourse}\n                         updateCourse={this.updateCourse} />\n                 } />\n          <Route path=\"/grid\"\n                 exact={true}\n                 render={(props) =>\n                     <CourseListComponent {...props}\n                                          toggle={this.toggle}\n                                          updateForm={this.updateForm}\n                                          newCourseTitle={this.state.newCourseTitle}\n                                          addCourse={this.addCourse}\n                                          layout=\"grid\"\n                                          toggleLink=\"table\"\n                                          courses={this.state.courses}\n                                          deleteCourse={this.deleteCourse}\n                                          updateCourse={this.updateCourse} />\n                 } />\n          <Route path=\"/table\"\n                 exact={true}\n                 render={(props) =>\n                     <CourseListComponent {...props}\n                                          toggle={this.toggle}\n                                          updateForm={this.updateForm}\n                                          newCourseTitle={this.state.newCourseTitle}\n                                          addCourse={this.addCourse}\n                                          layout=\"table\"\n                                          toggleLink=\"grid\"\n                                          courses={this.state.courses}\n                                          deleteCourse={this.deleteCourse}\n                                          updateCourse={this.updateCourse} />\n                 } />\n          <Route path=\"/course-editor/:courseId\"\n                 exact={true}\n                 render={(props) =>\n                     <CourseEditorComponent {...props}\n                                            courseId={props.match.params.courseId} />\n                 } />\n          <Route path=\"/course-editor/:courseId/module/:moduleId\"\n                 exact={true}\n                 render={(props) =>\n                     <CourseEditorComponent\n                         {...props}\n                         courseId={props.match.params.courseId}\n                         moduleId={props.match.params.moduleId} />\n                 } />\n          <Route path=\"/course-editor/:courseId/module/:moduleId/lesson/:lessonId\"\n                 exact={true}\n                 render={(props) =>\n                     <CourseEditorComponent\n                         {...props}\n                         courseId={props.match.params.courseId}\n                         moduleId={props.match.params.moduleId}\n                         lessonId={props.match.params.lessonId} />\n                 } />\n          <Route path=\"/course-editor/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId\"\n                 exact={true}\n                 render={(props) =>\n                     <CourseEditorComponent\n                         {...props}\n                         courseId={props.match.params.courseId}\n                         moduleId={props.match.params.moduleId}\n                         lessonId={props.match.params.lessonId}\n                         topicId={props.match.params.topicId} />\n                 } />\n        </Router>\n    )\n  }\n}\n\nexport default CourseManagerContainer"]},"metadata":{},"sourceType":"module"}