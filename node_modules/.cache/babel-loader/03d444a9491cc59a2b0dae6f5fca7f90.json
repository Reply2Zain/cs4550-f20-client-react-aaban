{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, useThemeVariants } from '../styles';\nimport usePagination from '../usePagination';\nimport PaginationItem from '../PaginationItem';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ul element. */\n  ul: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {},\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {}\n};\n\nfunction defaultGetAriaLabel(type, page, selected) {\n  if (type === 'page') {\n    return \"\".concat(selected ? '' : 'Go to ', \"page \").concat(page);\n  }\n\n  return \"Go to \".concat(type, \" page\");\n}\n\nvar Pagination = /*#__PURE__*/React.forwardRef(function Pagination(props, ref) {\n  var _props$boundaryCount = props.boundaryCount,\n      boundaryCount = _props$boundaryCount === void 0 ? 1 : _props$boundaryCount,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'standard' : _props$color,\n      _props$count = props.count,\n      count = _props$count === void 0 ? 1 : _props$count,\n      _props$defaultPage = props.defaultPage,\n      defaultPage = _props$defaultPage === void 0 ? 1 : _props$defaultPage,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$getItemAriaLab = props.getItemAriaLabel,\n      getItemAriaLabel = _props$getItemAriaLab === void 0 ? defaultGetAriaLabel : _props$getItemAriaLab,\n      _props$hideNextButton = props.hideNextButton,\n      hideNextButton = _props$hideNextButton === void 0 ? false : _props$hideNextButton,\n      _props$hidePrevButton = props.hidePrevButton,\n      hidePrevButton = _props$hidePrevButton === void 0 ? false : _props$hidePrevButton,\n      onChange = props.onChange,\n      page = props.page,\n      _props$renderItem = props.renderItem,\n      renderItem = _props$renderItem === void 0 ? function (item) {\n    return /*#__PURE__*/React.createElement(PaginationItem, item);\n  } : _props$renderItem,\n      _props$shape = props.shape,\n      shape = _props$shape === void 0 ? 'circular' : _props$shape,\n      _props$showFirstButto = props.showFirstButton,\n      showFirstButton = _props$showFirstButto === void 0 ? false : _props$showFirstButto,\n      _props$showLastButton = props.showLastButton,\n      showLastButton = _props$showLastButton === void 0 ? false : _props$showLastButton,\n      _props$siblingCount = props.siblingCount,\n      siblingCount = _props$siblingCount === void 0 ? 1 : _props$siblingCount,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"boundaryCount\", \"classes\", \"className\", \"color\", \"count\", \"defaultPage\", \"disabled\", \"getItemAriaLabel\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"renderItem\", \"shape\", \"showFirstButton\", \"showLastButton\", \"siblingCount\", \"size\", \"variant\"]);\n\n  var _usePagination = usePagination(_extends({}, props, {\n    componentName: 'Pagination'\n  })),\n      items = _usePagination.items;\n\n  var themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    boundaryCount: boundaryCount,\n    color: color,\n    count: count,\n    defaultPage: defaultPage,\n    disabled: disabled,\n    getItemAriaLabel: getItemAriaLabel,\n    hideNextButton: hideNextButton,\n    hidePrevButton: hidePrevButton,\n    renderItem: renderItem,\n    shape: shape,\n    showFirstButton: showFirstButton,\n    showLastButton: showLastButton,\n    siblingCount: siblingCount,\n    size: size,\n    variant: variant\n  }), 'MuiPaginationItem');\n  return /*#__PURE__*/React.createElement(\"nav\", _extends({\n    \"aria-label\": \"pagination navigation\",\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.ul\n  }, items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index\n    }, renderItem(_extends({}, item, {\n      color: color,\n      'aria-label': getItemAriaLabel(item.type, item.page, item.selected),\n      shape: shape,\n      size: size,\n      variant: variant\n    })));\n  })));\n}); // @default tags synced with default values from usePagination\n\nprocess.env.NODE_ENV !== \"production\" ? Pagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Number of always visible pages at the beginning and end.\n   * @default 1\n   */\n  boundaryCount: PropTypes.number,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The active color.\n   * @default 'standard'\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n\n  /**\n   * The total number of pages.\n   * @default 1\n   */\n  count: PropTypes.number,\n\n  /**\n   * The page selected by default when the component is uncontrolled.\n   * @default 1\n   */\n  defaultPage: PropTypes.number,\n\n  /**\n   * If `true`, the pagination component will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @param {bool} selected If true, the current page is selected.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * If `true`, hide the next-page button.\n   * @default false\n   */\n  hideNextButton: PropTypes.bool,\n\n  /**\n   * If `true`, hide the previous-page button.\n   * @default false\n   */\n  hidePrevButton: PropTypes.bool,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The current page.\n   */\n  page: PropTypes.number,\n\n  /**\n   * Render the item.\n   *\n   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.\n   * @returns {ReactNode}\n   * @default (item) => <PaginationItem {...item} />\n   */\n  renderItem: PropTypes.func,\n\n  /**\n   * The shape of the pagination items.\n   * @default 'circular'\n   */\n  shape: PropTypes.oneOf(['circular', 'rounded']),\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * Number of always visible pages before and after the current page.\n   * @default 1\n   */\n  siblingCount: PropTypes.number,\n\n  /**\n   * The size of the pagination component.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPagination'\n})(Pagination);","map":{"version":3,"sources":["/Users/zainaaban/Documents/Northeastern/nf20/CS4550/cs4550-f20-client-react-aaban/node_modules/@material-ui/core/esm/Pagination/Pagination.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","useThemeVariants","usePagination","PaginationItem","styles","root","ul","display","flexWrap","alignItems","padding","margin","listStyle","outlined","text","defaultGetAriaLabel","type","page","selected","concat","Pagination","forwardRef","props","ref","_props$boundaryCount","boundaryCount","classes","className","_props$color","color","_props$count","count","_props$defaultPage","defaultPage","_props$disabled","disabled","_props$getItemAriaLab","getItemAriaLabel","_props$hideNextButton","hideNextButton","_props$hidePrevButton","hidePrevButton","onChange","_props$renderItem","renderItem","item","createElement","_props$shape","shape","_props$showFirstButto","showFirstButton","_props$showLastButton","showLastButton","_props$siblingCount","siblingCount","_props$size","size","_props$variant","variant","other","_usePagination","componentName","items","themeVariantsClasses","map","index","key","process","env","NODE_ENV","propTypes","number","object","string","oneOf","bool","func","oneOfType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, useThemeVariants } from '../styles';\nimport usePagination from '../usePagination';\nimport PaginationItem from '../PaginationItem';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ul element. */\n  ul: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {},\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {}\n};\n\nfunction defaultGetAriaLabel(type, page, selected) {\n  if (type === 'page') {\n    return \"\".concat(selected ? '' : 'Go to ', \"page \").concat(page);\n  }\n\n  return \"Go to \".concat(type, \" page\");\n}\n\nvar Pagination = /*#__PURE__*/React.forwardRef(function Pagination(props, ref) {\n  var _props$boundaryCount = props.boundaryCount,\n      boundaryCount = _props$boundaryCount === void 0 ? 1 : _props$boundaryCount,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'standard' : _props$color,\n      _props$count = props.count,\n      count = _props$count === void 0 ? 1 : _props$count,\n      _props$defaultPage = props.defaultPage,\n      defaultPage = _props$defaultPage === void 0 ? 1 : _props$defaultPage,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$getItemAriaLab = props.getItemAriaLabel,\n      getItemAriaLabel = _props$getItemAriaLab === void 0 ? defaultGetAriaLabel : _props$getItemAriaLab,\n      _props$hideNextButton = props.hideNextButton,\n      hideNextButton = _props$hideNextButton === void 0 ? false : _props$hideNextButton,\n      _props$hidePrevButton = props.hidePrevButton,\n      hidePrevButton = _props$hidePrevButton === void 0 ? false : _props$hidePrevButton,\n      onChange = props.onChange,\n      page = props.page,\n      _props$renderItem = props.renderItem,\n      renderItem = _props$renderItem === void 0 ? function (item) {\n    return /*#__PURE__*/React.createElement(PaginationItem, item);\n  } : _props$renderItem,\n      _props$shape = props.shape,\n      shape = _props$shape === void 0 ? 'circular' : _props$shape,\n      _props$showFirstButto = props.showFirstButton,\n      showFirstButton = _props$showFirstButto === void 0 ? false : _props$showFirstButto,\n      _props$showLastButton = props.showLastButton,\n      showLastButton = _props$showLastButton === void 0 ? false : _props$showLastButton,\n      _props$siblingCount = props.siblingCount,\n      siblingCount = _props$siblingCount === void 0 ? 1 : _props$siblingCount,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"boundaryCount\", \"classes\", \"className\", \"color\", \"count\", \"defaultPage\", \"disabled\", \"getItemAriaLabel\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"renderItem\", \"shape\", \"showFirstButton\", \"showLastButton\", \"siblingCount\", \"size\", \"variant\"]);\n\n  var _usePagination = usePagination(_extends({}, props, {\n    componentName: 'Pagination'\n  })),\n      items = _usePagination.items;\n\n  var themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    boundaryCount: boundaryCount,\n    color: color,\n    count: count,\n    defaultPage: defaultPage,\n    disabled: disabled,\n    getItemAriaLabel: getItemAriaLabel,\n    hideNextButton: hideNextButton,\n    hidePrevButton: hidePrevButton,\n    renderItem: renderItem,\n    shape: shape,\n    showFirstButton: showFirstButton,\n    showLastButton: showLastButton,\n    siblingCount: siblingCount,\n    size: size,\n    variant: variant\n  }), 'MuiPaginationItem');\n  return /*#__PURE__*/React.createElement(\"nav\", _extends({\n    \"aria-label\": \"pagination navigation\",\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.ul\n  }, items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index\n    }, renderItem(_extends({}, item, {\n      color: color,\n      'aria-label': getItemAriaLabel(item.type, item.page, item.selected),\n      shape: shape,\n      size: size,\n      variant: variant\n    })));\n  })));\n}); // @default tags synced with default values from usePagination\n\nprocess.env.NODE_ENV !== \"production\" ? Pagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Number of always visible pages at the beginning and end.\n   * @default 1\n   */\n  boundaryCount: PropTypes.number,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The active color.\n   * @default 'standard'\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n\n  /**\n   * The total number of pages.\n   * @default 1\n   */\n  count: PropTypes.number,\n\n  /**\n   * The page selected by default when the component is uncontrolled.\n   * @default 1\n   */\n  defaultPage: PropTypes.number,\n\n  /**\n   * If `true`, the pagination component will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @param {bool} selected If true, the current page is selected.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * If `true`, hide the next-page button.\n   * @default false\n   */\n  hideNextButton: PropTypes.bool,\n\n  /**\n   * If `true`, hide the previous-page button.\n   * @default false\n   */\n  hidePrevButton: PropTypes.bool,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The current page.\n   */\n  page: PropTypes.number,\n\n  /**\n   * Render the item.\n   *\n   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.\n   * @returns {ReactNode}\n   * @default (item) => <PaginationItem {...item} />\n   */\n  renderItem: PropTypes.func,\n\n  /**\n   * The shape of the pagination items.\n   * @default 'circular'\n   */\n  shape: PropTypes.oneOf(['circular', 'rounded']),\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * Number of always visible pages before and after the current page.\n   * @default 1\n   */\n  siblingCount: PropTypes.number,\n\n  /**\n   * The size of the pagination component.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPagination'\n})(Pagination);"]},"metadata":{},"sourceType":"module"}